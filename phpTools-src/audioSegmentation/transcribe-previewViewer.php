<?php
/*
    Phill phelps 2009 - philip3.phelps@uwe.ac.uk
    
*/
?>

<html>
<!-- 
As you can tell from the sheer.... quality of the code - this is just a prototype interface with
potentially lots and lots of bugs. 
Should you have any questions or comments, please email Phill Phelps at zenpho@zenpho.co.uk
or philip3.phelps@uwe.ac.uk

Thanks,
-->
<head>
	<title>Full transcript preview</title>
	<link rel="STYLESHEET" href="style.css" type="text/css">
    <script src="audio_player_scrolling.js" type="text/javascript" ></script>   
</head>
<body>
<?php
    require_once('trsxmltoolsclass.inc');  // for TRS XML parsing
    require_once('curPageUrl.inc'); // for current page url
    
    // abort if no URL pathname set
	if (isset($_GET["pathname"])){
		// decode any %## format characters passed from previous pages
		$pathname = urldecode($_GET["pathname"]); 

		// also encode again for later use in links generated by this page
        // double encode because on some Apache servers mod_rewrite messes up '+' character
		$encodedpathname = urlencode(urlencode($pathname));
	}
    else{
        trigger_error(
            "No transcript path was specified in the URL ?pathname="
            . "<br>Select a transcript to view from <a href=\"lecturer_timelines.php\">Timelines</a>"
            , E_USER_ERROR);
    }
    
    // read submissioninfo
    $submissionInfoContents = file_get_contents($pathname. "/this.submissioninfo",FILE_TEXT);
    
    // remove comment lines (beginning with #)
    $submissionInfoContents = preg_replace('/#.*$/sm', '', $submissionInfoContents, 1);
    
    // split into array
    $submissionInfoContents = explode("\n", $submissionInfoContents);
    
    // display submission info header
    echo "<div class=\"pageTitle\">"
		. "<h3>Transcript preview for $pathname</h3>"
        . "</div>\n"
        . "<div class=\"submissionInfo processingText\">"
        . "Submission info:"
		. "<pre>";
    
    // display submission info
    echo "Short description: " . $submissionInfoContents[0]
        . "\n";
    echo "Speakers (comma separated): " . $submissionInfoContents[1]
        . "\n";
    echo "Full MP3 recording filename: " . $submissionInfoContents[2]
        . "\n";
    echo "Admin comment: " . $submissionInfoContents[3]
        . "\n";
    
	echo "</pre>"
        . "</div>"
        . "\n";
	            	
	// link to download original recording
	$infofilename = $pathname . "/this.submissioninfo";
	$infofilehandle = fopen($infofilename, 'r') or trigger_error(
		"Can't open the submissioninfo data file for this transcript ($infofilename)"
		, E_USER_ERROR);
	$dummy = fgets($infofilehandle);
	$dummy = fgets($infofilehandle);
	$fullmp3 = fgets($infofilehandle);
	$fullmp3 = trim($fullmp3); // strip whitespace
	$fullmp3 = $pathname . '/' . $fullmp3;
	fclose($infofilehandle);
	unset($infofilename);
	unset($infofilehandle);
	unset($dummy);
	$encodedfullmp3 = urlencode($fullmp3);
	echo "<a href=\"$fullmp3\">Download the full original recording</a><br>";
    
    // link to download SRT subtitle file 
    echo "<a href=\"transcribe-generateSRT.php"
        . "?pathname=" . $encodedpathname . "\">"
        . "Download SRT subtitle file"
        . "</a><br>"
        . "\n";

    // link to list of recordings
    echo "<a href=\"index.php\">Back to list of mp3 recordings</a><br>"
	. "\n";
    
               
    // audio player for mp3 "listen" link
    // for use with javascript document rewriting
    echo "<hr>";
    echo "<div id=\"audioPlayer\" class=\"audioPlayer\">";
    echo '<OBJECT id="audio_player" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" ';
    echo 'codebase="http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,0,0" ';
	echo 'valign="top" align="centre" width="330" height="80" >';
	
    if (isset($_GET["starttime"])){ 
    	echo '<PARAM name="movie" value="audio_player_scrollToSegment.swf?media='
    		. $encodedfullmp3
    		. '&starttime='
    		. urldecode($_GET["starttime"])
    		. '"> ';
     }
     else {
     	echo '<PARAM name="movie" value="audio_player_scrollToSegment.swf?media='
    		. $encodedfullmp3
    		. '"> ';
     }

	echo '<PARAM name="movie" value="audio_player_scrollToSegment.swf?media=' . $encodedfullmp3 . '"> ';
	echo '<PARAM name="allowScriptAccess" value="sameDomain">';
	echo '<PARAM name="quality" value="high"> ';
	echo '<PARAM name="scale" value="noscale"> ';
	echo '<PARAM name="salign" value="rt"> ';
	echo '<PARAM name="bgcolor" value="#ffffff"> ';
	echo '    <EMBED name="audioPlayer" pluginspage="http://www.macromedia.com/go/getflashplayer" ';   
	
	if (isset($_GET["starttime"])){ 
    	echo '    src="audio_player_scrollToSegment?media='
     		. $encodedfullmp3
    		. '&starttime='
    		. urldecode($_GET["starttime"])
     		. '" ';
     }
     else {
     	echo '    src="audio_player_scrollToSegment?media='
     		. $encodedfullmp3
     		. '" ';
     }

	echo '    quality="high" scale="noscale" salign="rt" bgcolor="#ffffff" ';
	echo '    allowscriptaccess="sameDomain" type="application/x-shockwave-flash" ';
	echo '    valign="top" align="centre" width="330" height="80" >';
	echo '    </EMBED>';
	
	echo '</OBJECT>';
    echo "</div>";
    
	// TRSXMLTools::extractTagData()- extracts timecode information (using object method callback)
    $obj_trs = new TRSXMLTools();
    $obj_trs->fetch($pathname . "/skeleton.xml");
                 
    // now print out a table of transcript information
    echo "<div style=\"height: 400px; width: 100%; overflow: auto;\">";
    echo "<table border=1>";
    echo "<th>Time<br>(secs)</th>";
    echo "<th width=\"95%\">Transcript text</th>"; 
    
     // iterate over each 'turn' in the skeleton 
    foreach ($obj_trs->eachTurn() as $turn)
    {
            
		// extract timecode information from each 'turn'
		$startTime = $turn->_attr->STARTTIME;
		$endTime = $turn->_attr->ENDTIME;
		$splitFilename = $turn->_attr->SPLITFILENAME;
		  
		/////////////////////////////////////////////////////////////////
		// tag a row with an id for the scrolling flash/javascript to seek to
		echo "<tr class=\"viewerTableRow\" id=\"" 
			. (int)($startTime * 1000) 
			. "\">\n";
					
		/////////////////////////////////////////////////////////////////
		// segment time column         	
		echo "<td>"
			. "<span class=\"listenButton\" "
			. "onclick=\"seekPlayheadToTime('"
			. ($startTime * 1000)
			. "')\"> "
			. $startTime
			. "</span>\n"
			. "</td>\n";
					
		////////////////////////////////////////////////////////////////
		// segment text
		echo "<td>\n";
		
		
		//determine paths (mp3, txt, rtf)
		$segment_mp3_pathname = "transcribe" . "/" . $splitFilename;
		
		$txt_pathname = substr($segment_mp3_pathname, 0, -3) . "txt";
		$rtf_pathname = substr($segment_mp3_pathname, 0, -3) . "rtf";
	
		// debugging
		//echo "txt: $txt_pathname, ------ , rtf: $rtf_pathname";
		
		if ( file_exists( $txt_pathname ) && file_exists( $rtf_pathname ) ){
		
			// if both rtf and txt files exist
			$transcriptText = "<b>WARNING</b> - conflicting transcript text. "
				. "Both RTF and TXT files exist for " 
				. substr($segment_mp3_pathname, 0, -4)
				. "<br><br>";
		}
		else if ( file_exists( $txt_pathname ) ){
		
			// if the txt file exists
			$filehandle = fopen($txt_pathname,'r') or trigger_error(
				"Error: Cannot open transcript text $txt_pathname"
				, E_USER_ERROR);
				
			// read in 4kb chunks til the end
			$transcriptText = '';
			while ($file_content = fread($filehandle, 4096))
			{
				$transcriptText .= $file_content;
			}
		}
		else if ( file_exists( $rtf_pathname )  ) {
			
			// if the rtf file exists
			$command = './convertRichTextToAscii ' . $rtf_pathname;
			$transcriptText = shell_exec($command);
		}
		
		// sanitise text
		$transcriptText = stripslashes($transcriptText); 
		
		// output text
		echo $transcriptText;
		
		// close tags
		echo "</td>\n";
		echo "</tr>\n";

    }// foreach turn tag
    echo "</table>";
    echo "</div>";
    
?>
</body>
</html>